[Final Project Outline]
 * Author: John Mendelewski
 * Version: April 30 2010

[Overview]
My final project is an isometric turn based role playing game along the lines
of Final Fantasy Tactics. The player is given a team of characters to battle
enemies which appear on the map. Each character has a unique set of skills
it can use to win the battle.

The game starts with the player on the map with his army fully placed.
It is his turn, and he can move any unit he wishes. Each player is allowed one
move per turn, either moving a unit, or attacking. The inputs to the game are
the arrow keys for navigating the map, and the enter and escape key for
confirming and exiting menues. The camera centers as the player moves in the
field.

The game is two player only right now. Each player gets his turn, and the one
who has any army left at the end wins.


[Asset List]
I had some prior work from a previous class for this project, but not much.

All assets found though the internet using Google.
I claim no ownership on any of them. The only work I put into these files
is tweaking them to fit correctly in my game.

moogle.png               | copyright SquareEnix. Found from http://www.battycave.com/gabe/moogle2.jpg
isotiles.gif & grass.png | Found from http://pixeltemple.com/wp-content/uploads/2008/01/isotiles.gif
knight folder            | copyright Gravity Inc. Found from http://rosprites.blogspot.com/2009/05/home-page.html
sounds folder            | Found on freesounds.org. Under Creative Commons Sampling Plus.
                         | Courtesy of broumbroum.

I am using a simple opengl library called Pyglet.


[Blue Sky Plan]
* Some sort of two player functionality
* Multiple levels
* UI all fleshed out, with proper menus
* Usable items
* Switchable inventory
* Unique army classes

[Murphy's Law Plan]
* One level verses the computer
    * Turn-based Battle system works
    * Simple battle possible verses computer AI
* Main menu for starting game
* A fighting unit and a spell casting unit

[Actually done]
* Two player functionality
* A fighting unit and a spell casting unit (same sprites though)
* Main menu for starting game
* Turn-based Battle system works
* UI slightly fleshed out


[Issues]
The bulk of my issues were with the 3rd party library I was using.
I chose it because of its implementation; Pyglet is written in Python only.
The alternative, PyGame, requires SDL, a C library, to be installed. The
documentation for pyglet covers the classes, but I feel it lacks in actual
use cases.

One thing which does not work is animation while moving the character. I
have no idea why this would not work. It does not seem to be documented
anywhere, so I got stuck on it. I tried to implement my own "Sprite" classes,
which would handle moving and animating at the same time, but I then got
hung up on how the images in these sprite classes were merged into the window.
I wound up just sticking with my first broken implementation.

[Future Work]
* More work in characters - I set up a way of defining characters which is
  abstracted away from the rest of the code. In the end, I would want these
  classes to be serializable, being stored as small chunks of data somewhere
  and loaded at runtime, just like images and sound.
* Battle system needs to be tought out - Right now it is just random, with a
  little help from stats.
* UI - A unified system of popups and windows could be made for things like
  damage and unit information
* Levels - Different environments with obstacles.
